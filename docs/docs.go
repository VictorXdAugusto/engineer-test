// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/positions": {
            "post": {
                "description": "Salva uma nova posição geográfica para um usuário específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Salvar posição do usuário",
                "parameters": [
                    {
                        "description": "Dados da posição",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SavePositionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Posição salva com sucesso",
                        "schema": {
                            "$ref": "#/definitions/usecase.SaveUserPositionResponse"
                        }
                    },
                    "400": {
                        "description": "Dados de posição inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/positions/nearby": {
            "get": {
                "description": "Busca usuários próximos a uma coordenada específica dentro de um raio determinado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Buscar usuários próximos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário que está buscando",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Latitude da posição de referência (-90 a 90)",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude da posição de referência (-180 a 180)",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Raio de busca em metros (1 a 50000)",
                        "name": "radius_meters",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Número máximo de resultados (padrão: 50)",
                        "name": "max_results",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de usuários próximos",
                        "schema": {
                            "$ref": "#/definitions/usecase.FindNearbyUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Parâmetros de busca inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/positions/sector": {
            "get": {
                "description": "Busca todos os usuários que estão no mesmo setor geográfico de uma coordenada específica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Buscar usuários no mesmo setor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário que está buscando",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Latitude da posição de referência (-90 a 90)",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude da posição de referência (-180 a 180)",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de usuários no setor",
                        "schema": {
                            "$ref": "#/definitions/usecase.GetUsersInSectorResponse"
                        }
                    },
                    "400": {
                        "description": "Parâmetros de busca inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Cria um novo usuário no sistema para participar de um evento",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Criar um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/usecase.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Erro de validação",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Usuário já existe",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{id}/position": {
            "get": {
                "description": "Retorna a posição geográfica atual de um usuário específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Obter posição atual do usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posição atual do usuário",
                        "schema": {
                            "$ref": "#/definitions/usecase.GetCurrentPositionResponse"
                        }
                    },
                    "400": {
                        "description": "ID do usuário inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{id}/positions/history": {
            "get": {
                "description": "Retorna o histórico de posições geográficas de um usuário com limite configurável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Obter histórico de posições do usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Número máximo de posições a retornar (padrão: 10, máximo: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Histórico de posições do usuário",
                        "schema": {
                            "$ref": "#/definitions/usecase.GetPositionHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "ID do usuário inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.SavePositionRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longitude",
                "user_id"
            ],
            "properties": {
                "latitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                },
                "longitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "usecase.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "event_id",
                "id",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "usecase.CreateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "usecase.FindNearbyUsersResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "nearby_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.NearbyUserResponse"
                    }
                },
                "search_center": {
                    "$ref": "#/definitions/usecase.NearbyUserResponse"
                },
                "total_found": {
                    "type": "integer"
                }
            }
        },
        "usecase.GetCurrentPositionResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "sector_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "usecase.GetPositionHistoryResponse": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.PositionHistoryItem"
                    }
                },
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "usecase.GetUsersInSectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "requested_by": {
                    "$ref": "#/definitions/usecase.SectorUserResponse"
                },
                "sector_bounds": {
                    "$ref": "#/definitions/usecase.SectorBounds"
                },
                "sector_id": {
                    "type": "string"
                },
                "total_found": {
                    "type": "integer"
                },
                "users_in_sector": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.SectorUserResponse"
                    }
                }
            }
        },
        "usecase.NearbyUserResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Ex: \"5m30s\"",
                    "type": "string"
                },
                "distance_meters": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "position_id": {
                    "type": "string"
                },
                "sector_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "usecase.PositionHistoryItem": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "position_id": {
                    "type": "string"
                },
                "recorded_at": {
                    "type": "string"
                },
                "sector_id": {
                    "type": "string"
                }
            }
        },
        "usecase.SaveUserPositionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "position_id": {
                    "type": "string"
                },
                "sector_id": {
                    "type": "string"
                }
            }
        },
        "usecase.SectorBounds": {
            "type": "object",
            "properties": {
                "max_latitude": {
                    "type": "number"
                },
                "max_longitude": {
                    "type": "number"
                },
                "min_latitude": {
                    "type": "number"
                },
                "min_longitude": {
                    "type": "number"
                }
            }
        },
        "usecase.SectorUserResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Ex: \"5m30s\"",
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "position_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Operações relacionadas a usuários",
            "name": "users"
        },
        {
            "description": "Operações relacionadas a posições geográficas",
            "name": "positions"
        },
        {
            "description": "Operações de health check",
            "name": "health"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Geolocation Tracker API",
	Description:      "API para rastreamento de geolocalização de usuários em eventos\nEsta API permite criar usuários, salvar posições geográficas e consultar usuários próximos",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
